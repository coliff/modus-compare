import { HTMLElement, h, proxyCustomElement } from '@stencil/core/internal/client';

const modusSpinnerCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}div.spinner{animation:spin 0.75s linear infinite;border:0.25em solid #0063a3;border-radius:50%;border-right-color:transparent;display:inline-flex;font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"}";

let ModusSpinner$1 = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    /** (optional) The color of the spinner in hex format (eg #FFFFFF) */
    this.color = '#005F9E';
    /** (optional) The size of the spinner, will be applied to both the height and width */
    this.size = '2rem';
  }
  render() {
    return (h("div", { "aria-busy": "true", class: "spinner", style: { 'border-color': this.color, 'border-right-color': 'transparent', 'height': this.size, 'width': this.size } }));
  }
  static get style() { return modusSpinnerCss; }
};
ModusSpinner$1 = /*@__PURE__*/ proxyCustomElement(ModusSpinner$1, [1, "modus-spinner", {
    "color": [1],
    "size": [1]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["modus-spinner"];
  components.forEach(tagName => { switch (tagName) {
    case "modus-spinner":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ModusSpinner$1);
      }
      break;
  } });
}

const ModusSpinner = ModusSpinner$1;
const defineCustomElement = defineCustomElement$1;

export { ModusSpinner, defineCustomElement };
