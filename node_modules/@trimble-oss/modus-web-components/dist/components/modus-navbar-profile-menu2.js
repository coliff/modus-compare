import { HTMLElement, createEvent, h, proxyCustomElement } from '@stencil/core/internal/client';
import { d as defineCustomElement$1 } from './modus-button2.js';

const modusNavbarProfileMenuCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.profile-menu{background-color:#fff;border-radius:0.125rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);display:flex;flex-direction:column;max-width:384px;padding:1.5rem;position:absolute;right:0;top:44px;z-index:100;align-items:center;cursor:default;padding-left:48px;padding-right:48px;width:fit-content}.profile-menu.reverse{left:0}.profile-menu .avatar,.profile-menu .initials{background-color:#e0e1e9;border-radius:50%;margin-bottom:1rem;height:64px;width:64px}.profile-menu .initials{align-items:center;display:flex;font-size:1.5rem;justify-content:center}.profile-menu .username{font-size:1.25rem;padding:0 0.25rem}.profile-menu .email{font-size:0.875rem;margin-bottom:1rem;padding:0 0.25rem}";

let ModusNavbarProfileMenu = class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.signOutClick = createEvent(this, "signOutClick", 7);
  }
  signOutClickHandler(event) {
    this.signOutClick.emit(event);
  }
  render() {
    const direction = this.reverse ? 'reverse' : '';
    return (h("div", { class: `profile-menu ${direction}`, onClick: (event) => event.preventDefault() }, this.avatarUrl ?
      h("img", { class: "avatar", height: "64", src: this.avatarUrl, alt: "Profile avatar" })
      : h("span", { class: "initials" }, this.initials), h("div", { class: "username" }, this.username), h("div", { class: "email" }, this.email), h("modus-button", { "button-style": "borderless" }, "Sign out")));
  }
  static get style() { return modusNavbarProfileMenuCss; }
};
ModusNavbarProfileMenu = /*@__PURE__*/ proxyCustomElement(ModusNavbarProfileMenu, [1, "modus-navbar-profile-menu", {
    "avatarUrl": [1, "avatar-url"],
    "email": [1],
    "initials": [1],
    "reverse": [4],
    "username": [1]
  }, [[0, "buttonClick", "signOutClickHandler"]]]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["modus-navbar-profile-menu", "modus-button"];
  components.forEach(tagName => { switch (tagName) {
    case "modus-navbar-profile-menu":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ModusNavbarProfileMenu);
      }
      break;
    case "modus-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { ModusNavbarProfileMenu as M, defineCustomElement as d };
