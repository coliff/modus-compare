import { r as registerInstance, c as createEvent, h } from './index-12216e1c.js';
import { I as IconCheck } from './icon-check-d31dee3b.js';

const modusListItemCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");li{align-items:center;background-color:#fff;border:1px solid #e0e1e9;display:flex;font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:1rem;min-height:3rem;padding:0.125rem 1rem}li .slot{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}li .icon-check{margin-left:auto}li:hover{background-color:#e0e1e9}li.small{font-size:0.75rem;min-height:2rem;padding:0.1875rem 0.75rem}li.disabled{background-color:#cbcdd6;border-color:#cbcdd6;opacity:0.7}li.selected{background-color:#dcedf9;border-color:#dcedf9}";

let ModusListItem = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.itemClick = createEvent(this, "itemClick", 7);
    /** (optional) The size of list item */
    this.size = 'standard';
    /** (optional) The type of list item */
    this.type = 'standard'; // Future support for 'checkbox' | 'icon' | 'menu' | 'standard' | 'switchLeft' | 'switchRight'
    this.classBySize = new Map([
      ['condensed', 'small'],
      ['standard', 'standard'],
    ]);
  }
  render() {
    const containerClass = `${this.classBySize.get(this.size)} ${this.disabled ? 'disabled' : ''} ${this.selected ? 'selected' : ''}`;
    const iconSize = this.size === 'standard' ? '22' : '18';
    return (h("li", { class: containerClass, onClick: () => !this.disabled ? this.itemClick.emit() : null }, h("span", { class: "slot" }, h("slot", null)), this.selected ?
      h(IconCheck, { size: iconSize })
      : null));
  }
};
ModusListItem.style = modusListItemCss;

export { ModusListItem as modus_list_item };
