import { r as registerInstance, h } from './index-12216e1c.js';

const modusBadgeCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");div.badge{align-items:center;border-radius:2px;display:inline-flex;background-color:#0e416c;color:#fff;font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";font-size:0.75rem;font-weight:600;height:20px;padding:0 8px;position:relative}div.badge.color-danger{background-color:#da212c}div.badge.color-dark{background-color:#252a2e}div.badge.color-secondary{background-color:#464b52}div.badge.color-success{background-color:#006638}div.badge.color-tertiary{background-color:#cbcdd6;color:#252a2e}div.badge.color-warning{background-color:#fbad26;color:#252a2e}div.badge.type-text{background-color:unset;color:#0e416c}div.badge.type-text.color-danger{color:#da212c}div.badge.type-text.color-dark{color:#252a2e}div.badge.type-text.color-secondary{color:#464b52}div.badge.type-text.color-success{color:#006638}div.badge.type-text.color-tertiary{color:#cbcdd6}div.badge.type-text.color-warning{color:#fbad26}div.badge.type-counter{border-radius:20px}div.badge.size-small{font-size:0.625rem;height:14px;padding:0 4px}div.badge.size-small.type-counter{border-radius:14px}div.badge.size-large{font-size:1rem;height:28px;padding:0 12px}div.badge.size-large.type-counter{border-radius:28px}";

let ModusBadge = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /** (optional) The color of the badge */
    this.color = 'primary';
    /** (optional) The size of the badge */
    this.size = 'medium';
    /** (optional) The type of the badge */
    this.type = 'default';
    this.classByColor = new Map([
      ['danger', 'color-danger'],
      ['dark', 'color-dark'],
      ['primary', 'color-primary'],
      ['secondary', 'color-secondary'],
      ['success', 'color-success'],
      ['tertiary', 'color-tertiary'],
      ['warning', 'color-warning'],
    ]);
    this.classBySize = new Map([
      ['small', 'size-small'],
      ['medium', 'size-medium'],
      ['large', 'size-large'],
    ]);
    this.classByType = new Map([
      ['counter', 'type-counter'],
      ['default', 'type-default'],
      ['text', 'type-text'],
    ]);
  }
  render() {
    const className = `badge ${this.classByColor.get(this.color)} ${this.classBySize.get(this.size)} ${this.classByType.get(this.type)}`;
    return (h("div", { "aria-label": this.ariaLabel, class: className, role: "status" }, h("slot", null)));
  }
};
ModusBadge.style = modusBadgeCss;

export { ModusBadge as modus_badge };
