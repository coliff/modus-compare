// eslint-disable-next-line
import { Component, h, Prop } from '@stencil/core';
export class ModusTooltip {
  constructor() {
    /** (optional) The tooltip's position relative to its content. */
    this.position = 'top';
  }
  render() {
    const className = `modus-tooltip ${this.position}`;
    return (h("div", { class: className },
      h("slot", null),
      h("div", { "aria-label": this.ariaLabel, class: 'text', role: "tooltip" }, this.text)));
  }
  static get is() { return "modus-tooltip"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["modus-tooltip.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["modus-tooltip.css"]
  }; }
  static get properties() { return {
    "ariaLabel": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) The tooltip's aria-label."
      },
      "attribute": "aria-label",
      "reflect": false
    },
    "position": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'bottom' | 'left' | 'right' | 'top'",
        "resolved": "\"bottom\" | \"left\" | \"right\" | \"top\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) The tooltip's position relative to its content."
      },
      "attribute": "position",
      "reflect": false,
      "defaultValue": "'top'"
    },
    "text": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The tooltip's text."
      },
      "attribute": "text",
      "reflect": false
    }
  }; }
}
