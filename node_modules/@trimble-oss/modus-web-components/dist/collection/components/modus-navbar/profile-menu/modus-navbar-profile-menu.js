// eslint-disable-next-line
import { Component, Prop, h, Event, Listen } from '@stencil/core';
export class ModusNavbarProfileMenu {
  signOutClickHandler(event) {
    this.signOutClick.emit(event);
  }
  render() {
    const direction = this.reverse ? 'reverse' : '';
    return (h("div", { class: `profile-menu ${direction}`, onClick: (event) => event.preventDefault() },
      this.avatarUrl ?
        h("img", { class: "avatar", height: "64", src: this.avatarUrl, alt: "Profile avatar" })
        : h("span", { class: "initials" }, this.initials),
      h("div", { class: "username" }, this.username),
      h("div", { class: "email" }, this.email),
      h("modus-button", { "button-style": "borderless" }, "Sign out")));
  }
  static get is() { return "modus-navbar-profile-menu"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["modus-navbar-profile-menu.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["modus-navbar-profile-menu.css"]
  }; }
  static get properties() { return {
    "avatarUrl": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "avatar-url",
      "reflect": false
    },
    "email": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "email",
      "reflect": false
    },
    "initials": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "initials",
      "reflect": false
    },
    "reverse": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "reverse",
      "reflect": false
    },
    "username": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "username",
      "reflect": false
    }
  }; }
  static get events() { return [{
      "method": "signOutClick",
      "name": "signOutClick",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "complexType": {
        "original": "MouseEvent",
        "resolved": "MouseEvent",
        "references": {
          "MouseEvent": {
            "location": "global"
          }
        }
      }
    }]; }
  static get listeners() { return [{
      "name": "buttonClick",
      "method": "signOutClickHandler",
      "target": undefined,
      "capture": false,
      "passive": false
    }]; }
}
