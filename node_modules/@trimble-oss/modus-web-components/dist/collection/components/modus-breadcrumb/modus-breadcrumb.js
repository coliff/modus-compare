// eslint-disable-next-line
import { Component, Prop, h, Event } from '@stencil/core';
export class ModusBreadcrumb {
  constructor() {
    /** The breadcrumbs to render. */
    this.crumbs = [];
  }
  render() {
    return (h("nav", { "aria-label": this.ariaLabel, role: "navigation" },
      h("ol", null, this.crumbs.map((crumb, index) => h("li", { key: crumb.id }, index < this.crumbs.length - 1
        ? h("span", { class: "crumb" },
          h("a", { href: "#", onClick: () => this.crumbClick.emit(crumb) }, crumb.display),
          h("span", { class: "divider" }, '>'))
        : h("span", { class: "last-crumb" }, crumb.display))))));
  }
  static get is() { return "modus-breadcrumb"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["modus-breadcrumb.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["modus-breadcrumb.css"]
  }; }
  static get properties() { return {
    "ariaLabel": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The breadcrumb's aria-label."
      },
      "attribute": "aria-label",
      "reflect": false
    },
    "crumbs": {
      "type": "unknown",
      "mutable": false,
      "complexType": {
        "original": "Crumb[]",
        "resolved": "Crumb[]",
        "references": {
          "Crumb": {
            "location": "local"
          }
        }
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The breadcrumbs to render."
      },
      "defaultValue": "[]"
    }
  }; }
  static get events() { return [{
      "method": "crumbClick",
      "name": "crumbClick",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "(optional) An event that fires on breadcrumb click."
      },
      "complexType": {
        "original": "Crumb",
        "resolved": "Crumb",
        "references": {
          "Crumb": {
            "location": "local"
          }
        }
      }
    }]; }
}
