// eslint-disable-next-line
import { Component, Event, Prop, h } from '@stencil/core';
import { IconCheck } from '../icons/icon-check';
export class ModusListItem {
  constructor() {
    /** (optional) The size of list item */
    this.size = 'standard';
    /** (optional) The type of list item */
    this.type = 'standard'; // Future support for 'checkbox' | 'icon' | 'menu' | 'standard' | 'switchLeft' | 'switchRight'
    this.classBySize = new Map([
      ['condensed', 'small'],
      ['standard', 'standard'],
    ]);
  }
  render() {
    const containerClass = `${this.classBySize.get(this.size)} ${this.disabled ? 'disabled' : ''} ${this.selected ? 'selected' : ''}`;
    const iconSize = this.size === 'standard' ? '22' : '18';
    return (h("li", { class: containerClass, onClick: () => !this.disabled ? this.itemClick.emit() : null },
      h("span", { class: "slot" },
        h("slot", null)),
      this.selected ?
        h(IconCheck, { size: iconSize })
        : null));
  }
  static get is() { return "modus-list-item"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["modus-list-item.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["modus-list-item.css"]
  }; }
  static get properties() { return {
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) Disables the list item"
      },
      "attribute": "disabled",
      "reflect": false
    },
    "selected": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) The selected state of the list item"
      },
      "attribute": "selected",
      "reflect": false
    },
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'condensed' | 'standard'",
        "resolved": "\"condensed\" | \"standard\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) The size of list item"
      },
      "attribute": "size",
      "reflect": false,
      "defaultValue": "'standard'"
    },
    "type": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'standard'",
        "resolved": "\"standard\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "(optional) The type of list item"
      },
      "attribute": "type",
      "reflect": false,
      "defaultValue": "'standard'"
    }
  }; }
  static get events() { return [{
      "method": "itemClick",
      "name": "itemClick",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "An event that fires on list item click"
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }]; }
}
