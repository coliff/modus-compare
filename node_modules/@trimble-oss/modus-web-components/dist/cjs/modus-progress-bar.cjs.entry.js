'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-c9ded160.js');

const modusProgressBarCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.modus-progress-bar{display:flex;font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";height:1rem;outline:0.0625rem solid #6a6e79;width:100%}.modus-progress-bar.default-background-color{background-color:#fff}.modus-progress-bar .progress{display:flex;font-size:0.75rem;justify-content:center;overflow:hidden;transition:width 0.6s ease}.modus-progress-bar .progress.default-color{background-color:#0063a3}.modus-progress-bar .progress.default-text-color{color:#fff}";

let ModusProgressBar = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** (optional) The progress bar's maximum value. */
    this.maxValue = 100;
    /** (optional) The progress bar's minimum value. */
    this.minValue = 0;
    /** (optional) The progress bar's value. */
    this.value = 0;
  }
  getProgressStyle(percentage) {
    const progressStyle = {
      backgroundColor: this.color,
      color: this.textColor,
      width: `${percentage}%`
    };
    return progressStyle;
  }
  getProgressBarStyle() {
    const progressBarStyle = {
      backgroundColor: this.backgroundColor
    };
    return progressBarStyle;
  }
  render() {
    const percentage = (this.value - this.minValue) / (this.maxValue - this.minValue) * 100;
    const progressBarBackgroundColorClass = this.backgroundColor ? '' : 'default-background-color';
    const progressColorClass = this.color ? '' : 'default-color';
    const progressTextColor = this.textColor ? '' : 'default-text-color';
    const progressBarClass = `modus-progress-bar ${progressBarBackgroundColorClass}`;
    const progressClass = `progress ${progressColorClass} ${progressTextColor}`;
    return (index.h("div", { "aria-label": this.ariaLabel, "aria-valuemax": this.maxValue, "aria-valuemin": this.minValue, "aria-valuenow": this.value, class: progressBarClass, role: "progressbar", style: this.getProgressBarStyle() }, index.h("div", { class: progressClass, style: this.getProgressStyle(percentage) }, this.text)));
  }
};
ModusProgressBar.style = modusProgressBarCss;

exports.modus_progress_bar = ModusProgressBar;
